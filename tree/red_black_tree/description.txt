红黑树和AVL树一样，都对插入、删除和查找时间提供了最好可能的最坏情况担保。

二叉平衡树的严格平衡策略，以牺牲建立查找结构(插入，删除操作)的代价，换来了稳定的O(logN) 的查找时间复杂度  。 

1、节点是红色或黑色。

2、根是黑色。

3、所有叶子都是黑色（叶子是NIL节点）。

4、每个红色节点必须有两个黑色的子节点。(从每个叶子到根的所有路径上不能有两个连续的红色节点。)

5、从任一节点到其每个叶子的所有简单路径都包含相同数目的黑色节点。

注： 确保了，从根到叶子的最长的可能路径不多于最短的可能路径的两倍长。

因为每一个红黑树也是一个特化的二叉查找树，因此红黑树上的只读操作与普通二叉查找树上的只读操作相同。

然而，在红黑树上进行插入操作和删除操作会导致不再符合红黑树的性质。恢复红黑树的性质需要少量(O(logn))的颜色变更(实际是非常快速的)和不超过三次树旋转(对于插入操作是两次)。

虽然插入和删除很复杂，但操作时间仍可以保持为O(logn) 次。
