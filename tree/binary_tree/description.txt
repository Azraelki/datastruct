若左子树不空，则左子树所有节点的值均小于根节点；

若右子树不空，则右子树所有节点的值均大于等于根节点；

左右子树也分别为二叉排序树；

没有键值相等的节点；

（二叉查找树的性质：对儿茶排序树做中序遍历即可得到有序数列；时间复杂度和二分查找一样，插入和查找的时间复杂度均为O(logn)，最坏的情况仍然有O(n)，原因是插入和删除时没有保持平衡。二叉排序树的高度决定了其查找效率。）

二叉查找树的插入过程如下：

1) 若当前的二叉查找树为空，则插入的元素为根节点;

　　2) 若插入的元素值小于根节点值，则将元素插入到左子树中;

　　3) 若插入的元素值不小于根节点值，则将元素插入到右子树中。


二叉查找树的删除，分三种情况进行处理：

　　1) p为叶子节点，直接删除该节点，再修改其父节点的指针（注意分是根节点和不是根节点）;

　　2) p为单支节点（即只有左子树或右子树）。让p的子树与p的父亲节点相连，删除p即可（注意分是根节点和不是根节点）;

　　3) p的左子树和右子树均不空。找到p的后继y，因为y一定没有左子树，所以可以删除y，并让y的父亲节点成为y的右子树的父亲节点，并用y的值代替p的值；

或者方法二是找到p的前驱x，x一定没有右子树，所以可以删除x，并让x的父亲节点成为y的左子树的父亲节点。
